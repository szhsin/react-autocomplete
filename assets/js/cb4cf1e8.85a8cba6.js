"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[775],{7965:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>C,contentTitle:()=>y,default:()=>N,frontMatter:()=>v,metadata:()=>n,toc:()=>S});const n=JSON.parse('{"id":"docs/extras/disabled-items","title":"Disabled items","description":"Items can be disabled, preventing them from being interacted with or selected.","source":"@site/docs/docs/extras/disabled-items.mdx","sourceDirName":"docs/extras","slug":"/docs/extras/disabled-items","permalink":"/react-autocomplete/docs/extras/disabled-items","draft":false,"unlisted":false,"editUrl":"https://github.com/szhsin/react-autocomplete/tree/master/website/docs/docs/extras/disabled-items.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Object items","permalink":"/react-autocomplete/docs/extras/object-items"},"next":{"title":"Action items","permalink":"/react-autocomplete/docs/extras/action-items"}}');var i=s(2540),a=s(8453),r=s(267),o=s(8860),l=s(1028);const d="import { useState } from 'react';\nimport { useCombobox, autocomplete } from '@szhsin/react-autocomplete';\nimport FRUITS from '../../data/fruits';\n\n// highlight-next-line\nconst isItemDisabled = (item: string) => item.includes('berry');\n\nconst DisabledItems = () => {\n  const [value, setValue] = useState<string>();\n  const [selected, setSelected] = useState<string>();\n  const items = value\n    ? FRUITS.filter((item) => item.toLowerCase().includes(value.toLowerCase()))\n    : FRUITS;\n\n  const {\n    getFocusCaptureProps,\n    getLabelProps,\n    getInputProps,\n    getClearProps,\n    getToggleProps,\n    getListProps,\n    getItemProps,\n    open,\n    focusIndex,\n    isInputEmpty\n  } = useCombobox({\n    items,\n    // highlight-next-line\n    isItemDisabled,\n    value,\n    onChange: setValue,\n    selected,\n    onSelectChange: setSelected,\n    feature: autocomplete({ select: true })\n  });\n\n  return (\n    <div>\n      <label {...getLabelProps()} {...getFocusCaptureProps()}>\n        Fruit (no berries)\n      </label>\n\n      <div>\n        <input placeholder=\"Select or type...\" {...getInputProps()} />\n        {!isInputEmpty && <button {...getClearProps()}>X</button>}\n        <button {...getToggleProps()}>{open ? '\u2191' : '\u2193'}</button>\n      </div>\n\n      <ul\n        {...getListProps()}\n        style={{\n          display: open ? 'block' : 'none',\n          position: 'absolute',\n          listStyle: 'none',\n          background: '#fff',\n          overflow: 'auto',\n          maxHeight: 300,\n          margin: 0,\n          padding: 0\n        }}\n      >\n        {items.length ? (\n          items.map((item, index) => (\n            <li\n              style={{\n                background: focusIndex === index ? '#ddd' : 'none',\n                textDecoration: selected === item ? 'underline' : 'none',\n                // highlight-next-line\n                color: isItemDisabled(item) ? '#999' : '#000'\n              }}\n              key={item}\n              {...getItemProps({ item, index })}\n            >\n              {item}\n            </li>\n          ))\n        ) : (\n          <li>No options</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default DisabledItems;\n";var c=s(1516),p=s(3696),u=s(4164),m=s(6507),b=s(1510),g=s(2534),h=s(1608),x=s(4603),f=s(8155),A=s(7869),j=s(9094);const I=e=>e.includes("berry"),P=()=>{const[e,t]=(0,p.useState)(),[s,n]=(0,p.useState)(),a=e?f.A.filter((t=>t.toLowerCase().includes(e.toLowerCase()))):f.A,{getFocusCaptureProps:r,getLabelProps:o,getInputProps:l,getClearProps:d,getToggleProps:c,getListProps:P,getItemProps:v,open:y,focusIndex:C,isInputEmpty:S}=(0,m.B)({items:a,isItemDisabled:I,value:e,onChange:t,selected:s,onSelectChange:n,feature:(0,b.n)({select:!0})}),w=(0,j.i)(y,a);return(0,i.jsxs)("div",{className:A.A.wrap,children:[(0,i.jsx)("label",{className:A.A.label,...o(),...r(),children:"Fruit (no berries)"}),(0,i.jsxs)("div",{className:A.A.inputWrap,children:[(0,i.jsx)("input",{className:A.A.input,placeholder:"Select or type...",...l()}),!S&&(0,i.jsx)("button",{className:A.A.clear,...d(),children:(0,i.jsx)(g.A,{})}),(0,i.jsx)("button",{className:A.A.toggle,...c(),children:y?(0,i.jsx)(x.A,{}):(0,i.jsx)(h.A,{})})]}),(0,i.jsx)("ul",{ref:w,className:(0,u.$)(A.A.list,A.A.noScroll),...P(),style:{display:y?"block":"none"},children:a.length?a.map(((e,t)=>(0,i.jsx)("li",{className:(0,u.$)(A.A.item,C===t&&A.A.focused,s===e&&A.A.selected,I(e)&&A.A.disabled),...v({item:e,index:t}),children:e},e))):(0,i.jsx)("li",{className:A.A.noResult,children:"No options"})})]})},v={sidebar_position:3},y="Disabled items",C={},S=[];function w(e){const t={h1:"h1",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"disabled-items",children:"Disabled items"})}),"\n",(0,i.jsx)(t.p,{children:"Items can be disabled, preventing them from being interacted with or selected."}),"\n",(0,i.jsx)(P,{}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsx)(o.A,{value:"ts",label:"DisabledItems.tsx",children:(0,i.jsx)(l.A,{language:"tsx",children:d})}),(0,i.jsx)(o.A,{value:"data",label:"data/fruits.ts",children:(0,i.jsx)(l.A,{language:"ts",children:c.A})})]})]})}function N(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(w,{...e})}):w(e)}},8155:(e,t,s)=>{s.d(t,{A:()=>n});const n=["Apple","Banana","Blueberry","Cherry","Grape","Pineapple","Strawberry"]},1516:(e,t,s)=>{s.d(t,{A:()=>n});const n="export default ['Apple', 'Banana', 'Blueberry', 'Cherry', 'Grape', 'Pineapple', 'Strawberry'];\n"}}]);