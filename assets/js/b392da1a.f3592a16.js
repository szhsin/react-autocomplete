"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40],{9561:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>j,contentTitle:()=>k,default:()=>S,frontMatter:()=>T,metadata:()=>a,toc:()=>N});const a=JSON.parse('{"id":"docs/extras/async","title":"Async example","description":"When the list of items is fetched asynchronously, instead of computing them directly in the render body, the items should be stored in a local state, a global state store, or managed by a data-fetching library like React Query.","source":"@site/docs/docs/extras/async.mdx","sourceDirName":"docs/extras","slug":"/docs/extras/async","permalink":"/react-autocomplete/docs/extras/async","draft":false,"unlisted":false,"editUrl":"https://github.com/szhsin/react-autocomplete/tree/master/website/docs/docs/extras/async.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Select-Only","permalink":"/react-autocomplete/docs/extras/select-only"},"next":{"title":"Virtualization","permalink":"/react-autocomplete/docs/extras/virtualization"}}');var s=t(4848),i=t(8453),o=t(267),r=t(8860),l=t(1432);const c="import { useState } from 'react';\nimport { useCombobox, autocompleteLite } from '@szhsin/react-autocomplete';\nimport STATES from '../../data/states';\n\n// Simulate obtaining data from a remote server\nlet id = 0;\nconst fetchData = (value?: string) => {\n  clearTimeout(id);\n  if (!value || !value.trim()) return;\n\n  return new Promise<string[]>((res) => {\n    id = window.setTimeout(\n      () =>\n        res(STATES.filter((item) => item.toLowerCase().includes(value.toLowerCase().trim()))),\n      500\n    );\n  });\n};\n\nconst AsyncExample = () => {\n  const [value, setValue] = useState<string>();\n  const [selected, setSelected] = useState<string>();\n  const [items, setItems] = useState<string[]>();\n\n  const {\n    getInputProps,\n    getClearProps,\n    getListProps,\n    getItemProps,\n    open,\n    focusIndex,\n    isInputEmpty\n  } = useCombobox({\n    items: items || [],\n    value,\n    // highlight-start\n    // Whenever the user types in the input, fetch data remotely and update the items.\n    onChange: async (newValue) => {\n      setValue(newValue);\n      setItems(await fetchData(newValue));\n    },\n    // highlight-end\n    selected,\n    onSelectChange: setSelected,\n    feature: autocompleteLite({\n      select: true // or false\n    })\n  });\n\n  return (\n    <div>\n      <div>\n        <input placeholder=\"Type to search...\" {...getInputProps()} />\n        {!isInputEmpty && <button {...getClearProps()}>X</button>}\n      </div>\n\n      {open && items && (\n        <ul\n          {...getListProps()}\n          style={{\n            position: 'absolute',\n            listStyle: 'none',\n            color: '#000',\n            background: '#fff',\n            overflow: 'auto',\n            maxHeight: 300,\n            margin: 0,\n            padding: 0\n          }}\n        >\n          {items.length ? (\n            items.map((item, index) => (\n              <li\n                key={item}\n                style={{\n                  background: focusIndex === index ? '#ddd' : 'none',\n                  textDecoration: selected === item ? 'underline' : 'none'\n                }}\n                {...getItemProps({ item, index })}\n              >\n                {item}\n              </li>\n            ))\n          ) : (\n            <li>No options</li>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default AsyncExample;\n";var d=t(8785),u=t(6540),m=t(4164),h=t(6507),p=t(5464),g=t(6868),x=t(1236),f=t(2194),y=t(7869),b=t(9627),w=t(9094);let v=0;const A=()=>{const[e,n]=(0,u.useState)("select"),[t,a]=(0,u.useState)(),[i,o]=(0,u.useState)(),[r,l]=(0,u.useState)(),{getInputProps:c,getClearProps:d,getListProps:A,getItemProps:T,open:k,focusIndex:j,isInputEmpty:N,inputRef:C}=(0,h.B)({items:r||[],value:t,onChange:async e=>{a(e),l(await(e=>{if(clearTimeout(v),e&&e.trim())return new Promise((n=>{v=window.setTimeout((()=>n(f.A.filter((n=>n.toLowerCase().includes(e.toLowerCase().trim()))))),500)}))})(e))},selected:i,onSelectChange:o,feature:(0,p.d)({select:"select"===e})}),S=(0,w.i)(k,r||[]),I=e=>{n(e),a(void 0),o(void 0),l(void 0),C.current?.focus()};return(0,s.jsxs)("div",{className:y.A.wrap,children:[(0,s.jsxs)("div",{className:b.A.modes,children:[(0,s.jsx)(g.a,{name:"mode",value:"select",label:"Select mode",groupValue:e,onChange:I}),(0,s.jsx)(g.a,{name:"mode",value:"free",label:"Free mode",groupValue:e,onChange:I})]}),(0,s.jsxs)("div",{className:b.A.inputWrap,children:[(0,s.jsx)("input",{className:y.A.input,placeholder:"Type to search...",...c()}),!N&&(0,s.jsx)("button",{className:(0,m.$)(y.A.iconBtn,b.A.clear),...d(),children:(0,s.jsx)(x.A,{})})]}),k&&r&&(0,s.jsx)("ul",{ref:S,className:(0,m.$)(y.A.list,y.A.scroll),...A(),children:r.length?r.map(((e,n)=>(0,s.jsx)("li",{className:(0,m.$)(y.A.item,j===n&&y.A.focused,i===e&&y.A.selected),...T({item:e,index:n}),children:e},e))):(0,s.jsx)("li",{className:y.A.noResult,children:"No options"})})]})},T={sidebar_position:6},k="Async example",j={},N=[];function C(e){const n={code:"code",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"async-example",children:"Async example"})}),"\n",(0,s.jsxs)(n.p,{children:["When the list of items is fetched asynchronously, instead of computing them directly in the render body, the ",(0,s.jsx)(n.code,{children:"items"})," should be stored in a local state, a global state store, or managed by a data-fetching library like React Query."]}),"\n",(0,s.jsx)(A,{}),"\n",(0,s.jsxs)(o.A,{children:[(0,s.jsx)(r.A,{value:"ts",label:"AsyncExample.tsx",children:(0,s.jsx)(l.A,{language:"tsx",children:c})}),(0,s.jsx)(r.A,{value:"data",label:"data/states.ts",children:(0,s.jsx)(l.A,{language:"ts",children:d.A})})]})]})}function S(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(C,{...e})}):C(e)}},6868:(e,n,t)=>{t.d(n,{a:()=>x});var a,s=t(4164),i=t(6540);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)({}).hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o.apply(null,arguments)}const r=e=>{let{title:n,titleId:t,...s}=e;return i.createElement("svg",o({xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"currentColor",viewBox:"0 -960 960 960","aria-labelledby":t},s),n?i.createElement("title",{id:t},n):null,a||(a=i.createElement("path",{d:"M480-280q83 0 141.5-58.5T680-480t-58.5-141.5T480-680t-141.5 58.5T280-480t58.5 141.5T480-280m0 200q-83 0-156-31.5T197-197t-85.5-127T80-480t31.5-156T197-763t127-85.5T480-880t156 31.5T763-763t85.5 127T880-480t-31.5 156T763-197t-127 85.5T480-80m0-80q134 0 227-93t93-227-93-227-227-93-227 93-93 227 93 227 227 93m0-320"})))};var l;function c(){return c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)({}).hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},c.apply(null,arguments)}const d=e=>{let{title:n,titleId:t,...a}=e;return i.createElement("svg",c({xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"currentColor",viewBox:"0 -960 960 960","aria-labelledby":t},a),n?i.createElement("title",{id:t},n):null,l||(l=i.createElement("path",{d:"M480-80q-83 0-156-31.5T197-197t-85.5-127T80-480t31.5-156T197-763t127-85.5T480-880t156 31.5T763-763t85.5 127T880-480t-31.5 156T763-197t-127 85.5T480-80m0-80q134 0 227-93t93-227-93-227-227-93-227 93-93 227 93 227 227 93m0-320"})))},u="label_EbSy",m="input_dY0D",h="radio_S55Q",p="checked_h9_f";var g=t(4848);const x=e=>{let{label:n,name:t,value:a,groupValue:i,onChange:o}=e;const l=i===a;return(0,g.jsxs)("label",{className:(0,s.$)(u,l&&p),children:[(0,g.jsx)("input",{className:m,type:"radio",name:t,value:a,checked:l,onChange:e=>{let{target:n}=e;return n.checked&&o(n.value)}}),l?(0,g.jsx)(r,{className:h}):(0,g.jsx)(d,{className:h}),n]})}},2194:(e,n,t)=>{t.d(n,{A:()=>a});const a=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]},9627:(e,n,t)=>{t.d(n,{A:()=>a});const a={inputWrap:"inputWrap_JKS9",clear:"clear_LtTX",modes:"modes_DURp",sandbox:"sandbox_I8XY"}},8785:(e,n,t)=>{t.d(n,{A:()=>a});const a="// https://en.wikipedia.org/wiki/List_of_states_and_territories_of_the_United_States#States\n\nexport default [\n  'Alabama',\n  'Alaska',\n  'Arizona',\n  'Arkansas',\n  'California',\n  'Colorado',\n  'Connecticut',\n  'Delaware',\n  'Florida',\n  'Georgia',\n  'Hawaii',\n  'Idaho',\n  'Illinois',\n  'Indiana',\n  'Iowa',\n  'Kansas',\n  'Kentucky',\n  'Louisiana',\n  'Maine',\n  'Maryland',\n  'Massachusetts',\n  'Michigan',\n  'Minnesota',\n  'Mississippi',\n  'Missouri',\n  'Montana',\n  'Nebraska',\n  'Nevada',\n  'New Hampshire',\n  'New Jersey',\n  'New Mexico',\n  'New York',\n  'North Carolina',\n  'North Dakota',\n  'Ohio',\n  'Oklahoma',\n  'Oregon',\n  'Pennsylvania',\n  'Rhode Island',\n  'South Carolina',\n  'South Dakota',\n  'Tennessee',\n  'Texas',\n  'Utah',\n  'Vermont',\n  'Virginia',\n  'Washington',\n  'West Virginia',\n  'Wisconsin',\n  'Wyoming'\n];\n"}}]);